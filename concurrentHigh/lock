JDK1.6 对锁的实现引入了大量的优化，如偏向锁、轻量级锁、自旋锁、适应性自旋锁、锁消除、锁粗化等技术来减少锁操作的开销。

Java 内存区域和内存模型是完全不一样的两个东西！！！

Java 内存区域定义了JVM 在运行时如何分区存储程序数据，就比如说堆主要用于存放对象实例。
Java 内存模型抽象了线程和主内存之间的关系，就比如说线程之间的共享变量必须存储在主内存中，其目的是为了屏蔽系统和硬件的差异，避免一套代码在不同的平台下产生的效果不一致。
#如何保证变量的可见性？

如果我们将变量声明为 volatile ，在对这个变量进行读写操作的时候，编译器会通过 内存屏障 来禁止指令重排序。
CPU 为了解决内存缓存不一致性问题可以通过制定缓存一致协议或者其他手段来解决