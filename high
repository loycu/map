0-1年入门：

Java基础复盘（面向对象+Java的超类+Java的反射机制+异常处理+集合+泛型+基础IO操作+多线程+网络编程+JDK新特性）
Web编程初探（Servlet+MySQL数据库+商品管理系统实战）
SSM从入门到精通（Spring+SpringMVC+Mybatis+商品管理系统实战-SSM版）
SpringBoot快速上手（SpringBoot+基于SpringBoot的商品管理系统实战）
零距离互联网项目实战（Linux+Redis+双十一秒杀实战系统）
1-3年高工：

并发编程进阶（并发工具类实战+CAS+显示锁解析+线程池内部机制+性能优化）
JVM深度剖析（理解运行时数据区+堆外内存解读+JDK+内存泄漏问题排查+Arthas+GC算法和垃圾回收器+类加载机制等）
MySQL深度进阶
深入Tomcat底层（线程模型+性能调优）
3-5年资深：

数据库（调优+事务+锁+集群+主从+缓存等）
Linux（命令+生产环境+日志等）
中间件&分布式（dubbo+MQ/kafka、ElasticSearch、SpringCloud等组件）
5-7年架构：

开源框架（Spring5源码+SpringMVC源码+Mybatis源码）
分布式架构（Zk实战+RabbitMQ+RocketMQ+Kafka）
高效存储（Redis+mongoDB+MySQL高可用+Mycat+Sharing-Sphere）
微服务架构（RPC+SpringBoot+SpringCloud Netflix+SpringCloud Alibaba+docker+k8s）

很少会用 fail-fast 模式，比较常用的可能还是 fail-silent，
特别常用，既然都到了 fallback 里面，肯定要做点降级的事情
resilience 弹性
In a distributed environment,
inevitably some of the many service dependencies will fail. Hystrix is a library that helps you control the interactions between these distributed services by adding latency tolerance and fault tolerance logic.
首先介绍两个概念：扇入和扇出。

对于微服务中某个服务来说，调用它的服务请求称为扇入，它调用其它服务的请求称为扇出。